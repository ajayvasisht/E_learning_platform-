{"ast":null,"code":"var _jsxFileName = \"D:\\\\pes\\\\sem 5\\\\DBMS\\\\dbms proj\\\\E-Learning-Platform-main\\\\E-Learning-Platform-main\\\\elearning-platform\\\\frontend\\\\src\\\\components\\\\student\\\\CourseList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseList = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    fetchCourses();\n  }, []);\n  const fetchCourses = async () => {\n    try {\n      const response = await api.getAllCourses();\n      setCourses(response.data);\n    } catch (error) {\n      console.error('Error fetching courses:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEnroll = async courseId => {\n    try {\n      await api.enrollInCourse({\n        studentId: user.id,\n        courseId: courseId\n      });\n      alert('Successfully enrolled in course!');\n    } catch (error) {\n      console.error('Error enrolling in course:', error);\n      alert('Failed to enroll in course');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading courses...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n    children: courses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-md p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: course.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: [\"Domain: \", course.Domain]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: [\"Year: \", course.Year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEnroll(course.CourseID),\n        className: \"mt-4 bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\",\n        children: \"Enroll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, course.CourseID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseList, \"ebd03n7reerY1Vu0O9TJUGI0BrI=\", false, function () {\n  return [useAuth];\n});\n_c = CourseList;\nexport default CourseList;\nvar _c;\n$RefreshReg$(_c, \"CourseList\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","api","jsxDEV","_jsxDEV","CourseList","_s","courses","setCourses","loading","setLoading","user","fetchCourses","response","getAllCourses","data","error","console","handleEnroll","courseId","enrollInCourse","studentId","id","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","course","Title","Domain","Year","onClick","CourseID","_c","$RefreshReg$"],"sources":["D:/pes/sem 5/DBMS/dbms proj/E-Learning-Platform-main/E-Learning-Platform-main/elearning-platform/frontend/src/components/student/CourseList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport api from '../../services/api';\r\n\r\nconst CourseList = () => {\r\n  const [courses, setCourses] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    fetchCourses();\r\n  }, []);\r\n\r\n  const fetchCourses = async () => {\r\n    try {\r\n      const response = await api.getAllCourses();\r\n      setCourses(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching courses:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEnroll = async (courseId) => {\r\n    try {\r\n      await api.enrollInCourse({\r\n        studentId: user.id,\r\n        courseId: courseId\r\n      });\r\n      alert('Successfully enrolled in course!');\r\n    } catch (error) {\r\n      console.error('Error enrolling in course:', error);\r\n      alert('Failed to enroll in course');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading courses...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n      {courses.map((course) => (\r\n        <div key={course.CourseID} className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <h3 className=\"text-xl font-semibold mb-2\">{course.Title}</h3>\r\n          <p className=\"text-gray-600\">Domain: {course.Domain}</p>\r\n          <p className=\"text-gray-600\">Year: {course.Year}</p>\r\n          <button\r\n            onClick={() => handleEnroll(course.CourseID)}\r\n            className=\"mt-4 bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\"\r\n          >\r\n            Enroll\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,4BAA4B;AACpD,OAAOC,GAAG,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM;IAAEY;EAAK,CAAC,GAAGV,OAAO,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACdY,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,aAAa,CAAC,CAAC;MAC1CN,UAAU,CAACK,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,SAAS;MACRN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMQ,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACvC,IAAI;MACF,MAAMjB,GAAG,CAACkB,cAAc,CAAC;QACvBC,SAAS,EAAEV,IAAI,CAACW,EAAE;QAClBH,QAAQ,EAAEA;MACZ,CAAC,CAAC;MACFI,KAAK,CAAC,kCAAkC,CAAC;IAC3C,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDO,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,IAAId,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAoB,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;EAEA,oBACExB,OAAA;IAAKyB,SAAS,EAAC,sDAAsD;IAAAL,QAAA,EAClEjB,OAAO,CAACuB,GAAG,CAAEC,MAAM,iBAClB3B,OAAA;MAA2ByB,SAAS,EAAC,mCAAmC;MAAAL,QAAA,gBACtEpB,OAAA;QAAIyB,SAAS,EAAC,4BAA4B;QAAAL,QAAA,EAAEO,MAAM,CAACC;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9DxB,OAAA;QAAGyB,SAAS,EAAC,eAAe;QAAAL,QAAA,GAAC,UAAQ,EAACO,MAAM,CAACE,MAAM;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxDxB,OAAA;QAAGyB,SAAS,EAAC,eAAe;QAAAL,QAAA,GAAC,QAAM,EAACO,MAAM,CAACG,IAAI;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpDxB,OAAA;QACE+B,OAAO,EAAEA,CAAA,KAAMjB,YAAY,CAACa,MAAM,CAACK,QAAQ,CAAE;QAC7CP,SAAS,EAAC,iEAAiE;QAAAL,QAAA,EAC5E;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GATDG,MAAM,CAACK,QAAQ;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUpB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtB,EAAA,CAtDID,UAAU;EAAA,QAGGJ,OAAO;AAAA;AAAAoC,EAAA,GAHpBhC,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}